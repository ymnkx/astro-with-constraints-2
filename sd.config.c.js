import StyleDictionary from 'style-dictionary';

StyleDictionary.registerFormat({
  name: 'scss/mixins',
  format: function ({ dictionary, platform, options, file }) {
    const header = `/*
 * ===================
 * Design System Composite Tokens
 * Generated by Style Dictionary
 * DO NOT EDIT DIRECTLY
 * ===================
 */

`;

    const mixins = dictionary.allTokens
      .filter((token) => token.type === 'composite')
      .map((token) => {
        const mixinName = token.name.replace(/[-_]/g, '-');
        const properties = Object.entries(token.value)
          .map(([prop, value]) => `  ${prop.replace(/([A-Z])/g, '-$1').toLowerCase()}: ${value};`)
          .join('\n');

        return `@mixin ${mixinName} {\n${properties}\n}`;
      })
      .join('\n\n');

    return header + mixins;
  },
});

export default {
  source: [`tokens/composite/**/*.json`],
  platforms: {
    scss: {
      transformGroup: 'scss',
      buildPath: 'tokens/',
      files: [
        {
          destination: 'design-composite.scss',
          format: 'scss/mixins',
        },
      ],
    },
  },
};
